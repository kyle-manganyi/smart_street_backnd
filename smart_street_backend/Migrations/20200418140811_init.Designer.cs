// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using smart_street_backend.Model;

namespace smart_street_backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200418140811_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("smart_street_backend.Model.cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("location");

                    b.Property<DateTime>("openDate");

                    b.Property<int>("orderID");

                    b.HasKey("Id");

                    b.HasIndex("orderID");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("smart_street_backend.Model.catergory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("catergories");
                });

            modelBuilder.Entity("smart_street_backend.Model.customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("smart_street_backend.Model.image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("imageUrl");

                    b.Property<int>("productID");

                    b.HasKey("Id");

                    b.HasIndex("productID");

                    b.ToTable("images");
                });

            modelBuilder.Entity("smart_street_backend.Model.order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("productID");

                    b.Property<int>("quantity");

                    b.Property<int>("userID");

                    b.HasKey("Id");

                    b.HasIndex("productID");

                    b.HasIndex("userID");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("smart_street_backend.Model.product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("catergoryID");

                    b.Property<string>("description");

                    b.Property<string>("name");

                    b.Property<double>("price");

                    b.Property<int>("stockCount");

                    b.Property<int>("supplierId");

                    b.HasKey("Id");

                    b.HasIndex("catergoryID");

                    b.HasIndex("supplierId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("smart_street_backend.Model.sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("endDate");

                    b.Property<int>("productID");

                    b.Property<DateTime>("startDate");

                    b.HasKey("Id");

                    b.HasIndex("productID");

                    b.ToTable("sales");
                });

            modelBuilder.Entity("smart_street_backend.Model.supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("smart_street_backend.Model.user", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.Property<string>("location");

                    b.Property<string>("name");

                    b.Property<string>("password");

                    b.Property<string>("phone");

                    b.Property<string>("username");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("smart_street_backend.Model.cart", b =>
                {
                    b.HasOne("smart_street_backend.Model.order", "ordr")
                        .WithMany()
                        .HasForeignKey("orderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("smart_street_backend.Model.customer", b =>
                {
                    b.HasOne("smart_street_backend.Model.user", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("smart_street_backend.Model.image", b =>
                {
                    b.HasOne("smart_street_backend.Model.product", "product")
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("smart_street_backend.Model.order", b =>
                {
                    b.HasOne("smart_street_backend.Model.product", "product")
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("smart_street_backend.Model.user", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("smart_street_backend.Model.product", b =>
                {
                    b.HasOne("smart_street_backend.Model.catergory", "Catergory")
                        .WithMany()
                        .HasForeignKey("catergoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("smart_street_backend.Model.supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("supplierId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("smart_street_backend.Model.sale", b =>
                {
                    b.HasOne("smart_street_backend.Model.product", "product")
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("smart_street_backend.Model.supplier", b =>
                {
                    b.HasOne("smart_street_backend.Model.user", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
